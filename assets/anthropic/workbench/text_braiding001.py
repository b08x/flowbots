import anthropic

client = anthropic.Anthropic(
    # defaults to os.environ.get("ANTHROPIC_API_KEY")
    api_key="my_api_key",
)

# Replace placeholders like {{VARIANTS}} with real values,
# because the SDK does not support variables.
message = client.messages.create(
    model="claude-3-5-sonnet-20240620",
    max_tokens=1000,
    temperature=0,
    messages=[
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "You are tasked with braiding together different variants of an introduction. This process involves combining elements from multiple versions to create a cohesive and engaging new introduction. Here are the variants you will be working with:\n\n<variants>\n{{VARIANTS}}\n</variants>\n\nTo braid these variants effectively, follow these steps:\n\n1. Read through all the variants carefully, noting the key ideas, phrases, and stylistic elements in each.\n\n2. Identify common themes or points that appear across multiple variants.\n\n3. Look for unique or particularly strong elements in each variant that could enhance the final braided version.\n\n4. Begin constructing your braided introduction by weaving together the best parts of each variant. This may involve:\n   - Using a strong opening line from one variant\n   - Incorporating key ideas from multiple variants\n   - Blending stylistic elements to create a consistent tone\n   - Ensuring a logical flow of ideas throughout the braided version\n\n5. As you braid, aim to create a smooth, coherent introduction that captures the essence of all variants while avoiding repetition.\n\n6. Make sure the braided introduction maintains a consistent voice and style throughout.\n\n7. Review your braided version to ensure it includes the most important information from all variants and flows naturally.\n\nPresent your braided introduction within <braided_introduction> tags. After the braided introduction, provide a brief explanation of your braiding process and the choices you made within <explanation> tags.\n\nRemember, the goal is to create a single, cohesive introduction that effectively combines the strengths of all provided variants."
                }
            ]
        },
        {
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "Here's my braided introduction based on the given variants:\n\n<braided_introduction>\nIn this book, we will embark on a journey through the multifaceted domains of natural language processing, prompt engineering, and IT systems support. Our exploration begins with an examination of the circumstances that shape expectations and the pitfalls of misinterpreted connotations. We will delve into the implications of these expectations and their impact on user requirements and demands.\n\nAs we navigate this complex landscape, we'll strategize methods to overcome limitations and explore the intricacies of data storage and retrieval. Contextualizing actions within IT systems is paramount, and we will guide you through this process, including the when and where of \"stuffing things.\" Be mindful of the consequences that may arise from our programming choices, for they are the often-overlooked sentinels.\n\nWe'll highlight the differences and similarities between various programming languages, providing strategies for maintaining hygiene through periodic \"rinsing off the grossness\" that can accumulate over time. Repetition is key to mastery in programming, yet knowing when to halt is equally important. Doubt and reluctance are inevitable companions on this journey, but self-belief and perseverance will be your guiding lights.\n\nThroughout our exploration, we'll emphasize the importance of embracing the nuances of natural language programming while remaining aware of its limitations. Whether you attribute your successes to divine providence or self-actualization, what truly matters is your dedication to the craft and your commitment to continuous improvement.\n</braided_introduction>\n\n<explanation>\nIn braiding this introduction, I aimed to combine the strengths of each variant while maintaining a cohesive and engaging narrative. I started with the broader scope mentioned in the first variant, which includes natural language processing, prompt engineering, and IT systems support. This provides a more comprehensive overview of the book's content.\n\nI incorporated the conversational tone from the second variant, using phrases like \"embark on a journey\" and \"navigate this complex landscape\" to make the introduction more engaging. I also included specific examples and metaphors from all variants, such as \"stuffing things\" and \"rinsing off the grossness,\" to add color and relatability to the text.\n\nThe structure of the braided introduction follows a logical flow, starting with the formation of expectations, moving through the practical aspects of programming and system support, and concluding with encouragement for the reader's journey. I maintained a balance between technical content and motivational elements, drawing from all three variants.\n\nI chose to end the introduction with a combination of ideas from the first and third variants, emphasizing both the importance of dedication to the craft and the commitment to continuous improvement. This provides a strong, inspiring conclusion that encapsulates the spirit of all three variants.\n\nThroughout the braiding process, I aimed to create a smooth, coherent text that captures the essence of all variants while avoiding repetition and maintaining a consistent voice and style.\n</explanation>"
                }
            ]
        },
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Wonderful. Now, re-frame as ongoing video tutorial/lecture/live workflow series\n"
                }
            ]
        },
        {
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "Here's a reframed version of the braided introduction, presented as an ongoing video tutorial/lecture/live workflow series:\n\n<braided_introduction>\nWelcome, everyone, to our ongoing video series on the fascinating world of natural language processing, prompt engineering, and IT systems support. I'm thrilled to have you join us on this journey through the digital landscape.\n\nIn each episode, we'll be diving deep into different aspects of these interconnected fields. We'll start by exploring how expectations are formed in various contexts and how misinterpreted connotations can lead to unexpected outcomes. As we progress, we'll examine how these expectations shape user requirements and influence the systems we build.\n\nThroughout our live sessions, we'll be tackling real-world challenges and demonstrating practical strategies to overcome limitations in natural language processing and IT systems. You'll get to see firsthand how we handle data storage and retrieval, and we'll walk you through the process of contextualizing actions within complex IT environments.\n\nOne of the exciting aspects of this series is that we'll be coding live, showing you the ins and outs of different programming languages. We'll highlight similarities and differences, and share tips on maintaining clean, efficient code – or as we like to call it, \"rinsing off the grossness\" that can accumulate over time.\n\nIn each tutorial, we'll emphasize the power of repetition in mastering these skills, but we'll also discuss when it's time to step back and reassess our approach. We understand that doubt and reluctance can creep in when facing complex problems, so we'll be sharing strategies to build self-belief and perseverance.\n\nAs we progress through the series, we'll be addressing your questions and comments in real-time, making this a truly interactive learning experience. Whether you're a beginner or an experienced professional, there will be something for everyone in each episode.\n\nRemember, folks, whether you attribute your coding successes to divine inspiration or your own hard work, what truly matters is your dedication to improving your skills. So, let's embark on this exciting journey together! Don't forget to like, subscribe, and hit that notification bell to stay updated on our latest episodes. See you in our next live session!\n</braided_introduction>\n\n<explanation>\nIn reframing the introduction as an ongoing video tutorial/lecture/live workflow series, I made several key changes:\n\n1. Added an engaging opening that welcomes viewers to a video series, creating a sense of community and ongoing learning.\n\n2. Introduced the concept of episodes, suggesting a structured, sequential learning experience.\n\n3. Incorporated language that implies live interaction, such as \"live sessions\" and addressing questions in real-time, to make the content feel more dynamic and participatory.\n\n4. Used more conversational language and direct address to the audience, making it feel like a presenter is speaking directly to viewers.\n\n5. Mentioned specific video-related elements like coding live, demonstrating practical strategies, and walking through processes visually.\n\n6. Added a call-to-action at the end, encouraging viewers to engage with the content through likes, subscriptions, and notifications, which is typical for ongoing video series.\n\n7. Maintained the core content from the original braided introduction but presented it in a way that suggests it will be covered over multiple sessions rather than in a single book.\n\n8. Emphasized the interactive and evolving nature of the series, making it clear that this is not a static presentation but an ongoing, responsive learning experience.\n\nThis reframing maintains the comprehensive coverage of topics from the original introduction while adapting it to the more dynamic, episodic format of a video tutorial series.\n</explanation>"
                }
            ]
        },
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Great. Now, with he same intention as gene wilder, generate a variant of the introduction, using a satirical, dry wit\n<factoid>\nOne of the key reasons Gene Wilder introduced the limp…was to make it difficult for the audience to tell if he was lying or not,\" Historic Vids wrote, saying that Wilder felt it would keep the “audience guessing” as to the character's true intention.\n</factoid>"
                }
            ]
        },
        {
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "Here's a satirical, dry-witted variant of the introduction, channeling the spirit of Gene Wilder:\n\n<braided_introduction>\nLadies and gentlemen, esteemed colleagues, and unsuspecting passersby, welcome to our little circus of digital delights. I'm your ringmaster for this grand spectacle of natural language processing, prompt engineering, and IT systems support. Don't worry, I assure you I'm perfectly qualified to lead this expedition. Would I lie to you?\n\nIn our upcoming episodes, we'll stumble through the funhouse mirror maze of expectations and connotations. You'll witness the marvelous sight of requirements morphing before your very eyes, much like a caterpillar transforming into... well, a slightly larger caterpillar.\n\nWe'll demonstrate foolproof methods to overcome limitations in our systems. And by foolproof, I mean they'll work perfectly until the moment you need them most. You'll learn the art of data storage and retrieval, or as I like to call it, \"digital hoarding with a purpose.\"\n\nWatch in amazement as we contextualize actions within IT systems! Marvel at our ability to stuff things into places they were never meant to go! Gasp as we narrowly avoid the often-overlooked consequences of our programming choices!\n\nBut wait, there's more! We'll explore the subtle differences between programming languages. It's like comparing shades of beige, but infinitely more thrilling. And just when you think you can't take any more excitement, we'll show you how to rinse off the accumulated grossness of your code. It's like a spa day for your syntax!\n\nThroughout this journey, we'll emphasize the importance of repetition in programming. Because if at first you don't succeed, try, try again. And again. And again. Until you're questioning your life choices and contemplating a career in interpretive dance.\n\nNow, I know what you're thinking: \"Is he serious? Can we really trust this limping, wild-eyed man to guide us through the treacherous waters of IT?\" Well, my dear viewers, that's for you to decide. After all, in the world of programming, a healthy dose of skepticism is as essential as caffeine and imposter syndrome.\n\nSo, strap in, keep your hands and feet inside the ride at all times, and remember: whether you thank God, yourself, or your rubber duck debugging companion for your programming successes, what truly matters is that you keep coming back for more of this delightful madness. Now, shall we begin our descent into digital delirium?\n</braided_introduction>\n\n<explanation>\nIn crafting this satirical, dry-witted variant inspired by Gene Wilder, I employed several key techniques:\n\n1. Unreliable Narrator: I introduced an element of doubt about the narrator's competence and truthfulness, mirroring Wilder's technique of keeping the audience guessing.\n\n2. Exaggeration and Understatement: I used hyperbole to emphasize the mundane aspects of programming and understated the complex parts, creating a humorous contrast.\n\n3. Metaphors and Analogies: I incorporated absurd comparisons, like comparing programming languages to shades of beige, to highlight the sometimes tedious nature of the work.\n\n4. Self-deprecating Humor: The narrator pokes fun at the field and himself, creating a sense of shared experience with the audience.\n\n5. Dramatic Irony: The introduction promises excitement and amazement for tasks that are typically considered routine or frustrating in programming.\n\n6. Wordplay and Puns: I used phrases like \"digital hoarding with a purpose\" to add linguistic humor.\n\n7. Cultural References: I included nods to common programming experiences like rubber duck debugging and imposter syndrome.\n\n8. Rhetorical Questions: I used questions to engage the audience and create a sense of uncertainty, much like Wilder's characters often did.\n\n9. Circular Logic: The introduction ends by circling back to the idea of questioning the narrator's reliability, creating a satisfying comedic closure.\n\nThis approach maintains the core information about the series content while presenting it in a way that's entertaining, slightly absurd, and keeps the audience guessing about the narrator's true intentions and competence.\n</explanation>"
                }
            ]
        },
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Ok. Now, less obvious and a more measured tone"
                }
            ]
        },
        {
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "Here's a more measured and subtly witty variant of the introduction, with a less obvious satirical tone:\n\n<braided_introduction>\nGreetings, esteemed viewers, and welcome to our enlightening series on natural language processing, prompt engineering, and IT systems support. I'm your host, and I assure you, my expertise in these matters is almost as reliable as a weather forecast.\n\nOver the coming episodes, we'll navigate the intricate maze of expectations and connotations in the digital realm. We'll observe how user requirements evolve, much like a fine wine – or perhaps more accurately, like that forgotten tupperware at the back of your fridge.\n\nTogether, we'll explore methods to overcome system limitations. These techniques are guaranteed to work flawlessly... until they don't. We'll delve into the art of data storage and retrieval, a skill set essential for both programmers and those who can never find their car keys.\n\nOur journey will take us through the fascinating process of contextualizing actions within IT systems. It's a bit like trying to explain why you're wearing mismatched socks to your boss – complex, yet oddly satisfying when you succeed.\n\nWe'll examine the nuanced differences between programming languages, an endeavor some might compare to distinguishing between various shades of off-white paint. Rest assured, it's marginally more exciting than watching said paint dry.\n\nMaintenance of code hygiene will be a recurring theme. After all, a clean codebase is like a tidy desk – a sure sign of a cluttered desktop folder.\n\nThroughout our series, we'll emphasize the importance of repetition in mastering these skills. Because in programming, as in life, if at first you don't succeed, try, try again – then check Stack Overflow.\n\nNow, you might be wondering about my qualifications to guide you through this digital landscape. Let's just say I've been around the block a few times – and only got lost twice.\n\nSo, whether you attribute your coding triumphs to divine intervention, sheer luck, or that third cup of coffee, what truly matters is your commitment to the craft. Join us as we embark on this journey of discovery, where the only thing more unpredictable than a random number generator is the path our learning will take.\n</braided_introduction>\n\n<explanation>\nIn crafting this more measured and subtly witty variant, I made several key adjustments:\n\n1. Tone Moderation: I maintained a more professional overall tone while inserting subtle humor, creating a balance between informative and entertaining.\n\n2. Subtle Irony: Instead of overt satire, I used gentle irony and understated comparisons to add humor without undermining the content's credibility.\n\n3. Relatable Analogies: I incorporated everyday situations (like mismatched socks or lost car keys) to make technical concepts more accessible and subtly amusing.\n\n4. Measured Self-deprecation: The narrator's competence is questioned more gently, using phrases like \"almost as reliable as a weather forecast\" instead of outright claiming incompetence.\n\n5. Industry In-jokes: I included references familiar to programmers (like Stack Overflow) to create a sense of insider humor without alienating newcomers.\n\n6. Balanced Metaphors: The comparisons are less absurd than in the previous version, offering a mix of humor and genuine insight.\n\n7. Subtle Wordplay: I used mild puns and plays on words to add levity without overshadowing the content.\n\n8. Maintained Structure: The introduction still covers all key points about the series content, ensuring it remains informative despite the humorous elements.\n\nThis approach aims to engage the audience with gentle humor and relatable situations while maintaining the credibility and informative nature of the introduction. It's designed to be entertaining for those who catch the subtle jokes, yet still professional and informative for those who may not.\n</explanation>"
                }
            ]
        },
        {
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "That's great. I'd really like to satirize the trend on youtube for \"quick and easy\" \"learn everything in 5 minutes\" or the other trendy attempts at attracting attention with gimmicky sales pitches....think Martin Freeman\n"
                }
            ]
        }
    ]
)
print(message.content)
